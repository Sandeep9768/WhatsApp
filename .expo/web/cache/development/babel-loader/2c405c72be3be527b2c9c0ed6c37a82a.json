{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/zedex/Downloads/whatsapp-20200816T145951Z-001/whatsapp/node_modules/react-native-grid-list/src/components/GridList/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { colors } from \"../../themes\";\nimport generateStyles from \"./styles\";\n\nvar GridList = function (_PureComponent) {\n  _inherits(GridList, _PureComponent);\n\n  var _super = _createSuper(GridList);\n\n  function GridList() {\n    var _this;\n\n    _classCallCheck(this, GridList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.setup = function (_ref) {\n      var children = _ref.children,\n          data = _ref.data,\n          renderItem = _ref.renderItem;\n\n      if (children) {\n        _this._data = children;\n        _this._renderItem = _this.renderChildren;\n      } else if (data) {\n        _this._data = data;\n        _this._renderItem = renderItem;\n      }\n    };\n\n    _this._keyExtractor = function (item, index) {\n      return index.toString();\n    };\n\n    _this.renderItem = function (_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      var _this$props = _this.props,\n          showAnimation = _this$props.showAnimation,\n          showSeparator = _this$props.showSeparator,\n          itemStyle = _this$props.itemStyle;\n      var viewStyles = [];\n      viewStyles.push(_this.styles.itemContainer);\n\n      if (showSeparator) {\n        viewStyles.push(_this.styles.itemContainerSeparator);\n      }\n\n      if (showAnimation) {\n        viewStyles.push(_this.styles.itemContainerAnimationStart);\n      }\n\n      viewStyles.push(itemStyle);\n      return React.createElement(View, {\n        style: viewStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }\n      }, showAnimation ? React.createElement(Animated.View, {\n        style: [_this.styles.itemContainerAnimationEnd, {\n          opacity: _this.animatedValue[index]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, _this._renderItem({\n        item: item,\n        index: index,\n        animation: _this.animations[index]\n      })) : _this._renderItem({\n        item: item,\n        index: index\n      }));\n    };\n\n    _this.renderChildren = function (_ref3) {\n      var item = _ref3.item,\n          animation = _ref3.animation;\n\n      if (animation) {\n        animation.start();\n      }\n\n      return item;\n    };\n\n    return _this;\n  }\n\n  _createClass(GridList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props2 = this.props,\n          separatorBorderWidth = _this$props2.separatorBorderWidth,\n          separatorBorderColor = _this$props2.separatorBorderColor,\n          numColumns = _this$props2.numColumns,\n          animationInitialBackgroundColor = _this$props2.animationInitialBackgroundColor,\n          showSeparator = _this$props2.showSeparator,\n          showAnimation = _this$props2.showAnimation;\n      var stylesOptions = {\n        numColumns: numColumns\n      };\n\n      if (showSeparator) {\n        stylesOptions.separatorBorderWidth = separatorBorderWidth;\n        stylesOptions.separatorBorderColor = separatorBorderColor;\n      }\n\n      if (showAnimation) {\n        stylesOptions.animationInitialBackgroundColor = animationInitialBackgroundColor;\n      }\n\n      this.styles = generateStyles(stylesOptions);\n      this.setup(this.props);\n      this.animate();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps) {\n      this.setup(nextProps);\n      this.animate();\n    }\n  }, {\n    key: \"animate\",\n    value: function animate() {\n      var _this2 = this;\n\n      if (this.props.showAnimation) {\n        var _this$props3 = this.props,\n            numColumns = _this$props3.numColumns,\n            animationDuration = _this$props3.animationDuration;\n        this.animatedValue = [];\n        this.animations = this._data.map(function (_, index) {\n          _this2.animatedValue[index] = new Animated.Value(0);\n          return Animated.stagger(0, [Animated.timing(_this2.animatedValue[index], {\n            toValue: 1,\n            duration: animationDuration * Math.ceil((index + 1) / numColumns)\n          })]);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props4 = this.props,\n          showSeparator = _this$props4.showSeparator,\n          props = _objectWithoutProperties(_this$props4, [\"showSeparator\"]);\n\n      return React.createElement(FlatList, _extends({\n        contentContainerStyle: showSeparator && this.styles.container,\n        keyExtractor: this._keyExtractor,\n        ItemSeparatorComponent: function ItemSeparatorComponent() {\n          return showSeparator ? React.createElement(View, {\n            style: _this3.styles.separator,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 27\n            }\n          }) : null;\n        },\n        showsVerticalScrollIndicator: false\n      }, props, {\n        data: this._data,\n        renderItem: this.renderItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return GridList;\n}(PureComponent);\n\nGridList.propTypes = {\n  animationDuration: PropTypes.number,\n  animationInitialBackgroundColor: PropTypes.string,\n  itemStyle: ViewPropTypes.style,\n  numColumns: PropTypes.number.isRequired,\n  separatorBorderColor: PropTypes.string,\n  separatorBorderWidth: PropTypes.number,\n  showAnimation: PropTypes.bool,\n  showSeparator: PropTypes.bool,\n  data: PropTypes.array,\n  renderItem: PropTypes.func,\n  children: function children(props, propName) {\n    var data = props.data;\n\n    if (!props[propName] && !data) {\n      return new Error('Invalid props, `data` or `children` is required');\n    }\n\n    if (data && data.length !== 0 && !props.renderItem) {\n      return new Error('Invalid props, `renderItem` is required');\n    }\n\n    return undefined;\n  }\n};\nGridList.defaultProps = {\n  numColumns: 3,\n  data: [],\n  itemStyle: {},\n  showSeparator: false,\n  showAnimation: false,\n  animationDuration: 500,\n  separatorBorderWidth: 0,\n  separatorBorderColor: colors.white,\n  animationInitialBackgroundColor: colors.white\n};\nexport { GridList as default };","map":{"version":3,"sources":["/home/zedex/Downloads/whatsapp-20200816T145951Z-001/whatsapp/node_modules/react-native-grid-list/src/components/GridList/index.js"],"names":["React","PureComponent","PropTypes","colors","generateStyles","GridList","setup","children","data","renderItem","_data","_renderItem","renderChildren","_keyExtractor","item","index","toString","props","showAnimation","showSeparator","itemStyle","viewStyles","push","styles","itemContainer","itemContainerSeparator","itemContainerAnimationStart","itemContainerAnimationEnd","opacity","animatedValue","animation","animations","start","separatorBorderWidth","separatorBorderColor","numColumns","animationInitialBackgroundColor","stylesOptions","animate","nextProps","animationDuration","map","_","Animated","Value","stagger","timing","toValue","duration","Math","ceil","container","separator","propTypes","number","string","ViewPropTypes","style","isRequired","bool","array","func","propName","Error","length","undefined","defaultProps","white"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, ViewPropTypes, View, FlatList } from 'react-native';\n\nimport { colors } from '../../themes';\nimport generateStyles from './styles';\n\nexport default class GridList extends PureComponent {\n  static propTypes = {\n    animationDuration: PropTypes.number,\n    animationInitialBackgroundColor: PropTypes.string,\n    itemStyle: ViewPropTypes.style,\n    numColumns: PropTypes.number.isRequired,\n    separatorBorderColor: PropTypes.string,\n    separatorBorderWidth: PropTypes.number,\n    showAnimation: PropTypes.bool,\n    showSeparator: PropTypes.bool,\n\n    data: PropTypes.array,\n    renderItem: PropTypes.func,\n\n    // Only is allowed children or data not both\n    children(props, propName) {\n      const { data } = props;\n      if (!props[propName] && !data) {\n        return new Error('Invalid props, `data` or `children` is required');\n      }\n      if (data && data.length !== 0 && !props.renderItem) {\n        return new Error('Invalid props, `renderItem` is required');\n      }\n      return undefined;\n    },\n  };\n\n  static defaultProps = {\n    numColumns: 3,\n    data: [],\n    itemStyle: {},\n    showSeparator: false,\n    showAnimation: false,\n    animationDuration: 500,\n    separatorBorderWidth: 0,\n    separatorBorderColor: colors.white,\n    animationInitialBackgroundColor: colors.white,\n  };\n\n  componentWillMount() {\n    const {\n      separatorBorderWidth,\n      separatorBorderColor,\n      numColumns,\n      animationInitialBackgroundColor,\n      showSeparator,\n      showAnimation,\n    } = this.props;\n\n    const stylesOptions = {\n      numColumns,\n    };\n\n    if (showSeparator) {\n      stylesOptions.separatorBorderWidth = separatorBorderWidth;\n      stylesOptions.separatorBorderColor = separatorBorderColor;\n    }\n    if (showAnimation) {\n      stylesOptions.animationInitialBackgroundColor = animationInitialBackgroundColor;\n    }\n    this.styles = generateStyles(stylesOptions);\n\n    this.setup(this.props);\n    this.animate();\n  }\n  componentDidUpdate(nextProps) {\n    this.setup(nextProps);\n    this.animate();\n  }\n\n  setup = ({ children, data, renderItem }) => {\n    if (children) {\n      this._data = children;\n      this._renderItem = this.renderChildren;\n    } else if (data) {\n      this._data = data;\n      this._renderItem = renderItem;\n    }\n  };\n\n  animate() {\n    if (this.props.showAnimation) {\n      const { numColumns, animationDuration } = this.props;\n      this.animatedValue = [];\n\n      this.animations = this._data.map((_, index) => {\n        this.animatedValue[index] = new Animated.Value(0);\n        return Animated.stagger(0, [\n          Animated.timing(this.animatedValue[index], {\n            toValue: 1,\n            duration: animationDuration * Math.ceil((index + 1) / numColumns),\n          }),\n        ]);\n      });\n    }\n  }\n\n  _keyExtractor = (item, index) => index.toString();\n\n  renderItem = ({ item, index }) => {\n    const { showAnimation, showSeparator, itemStyle } = this.props;\n\n    const viewStyles = [];\n    viewStyles.push(this.styles.itemContainer);\n    if (showSeparator) {\n      viewStyles.push(this.styles.itemContainerSeparator);\n    }\n    if (showAnimation) {\n      viewStyles.push(this.styles.itemContainerAnimationStart);\n    }\n\n    viewStyles.push(itemStyle);\n\n    return (\n      <View style={viewStyles}>\n        {showAnimation ? (\n          <Animated.View\n            style={[\n              this.styles.itemContainerAnimationEnd,\n              { opacity: this.animatedValue[index] },\n            ]}\n          >\n            {this._renderItem({\n              item,\n              index,\n              animation: this.animations[index],\n            })}\n          </Animated.View>\n        ) : (\n          this._renderItem({ item, index })\n        )}\n      </View>\n    );\n  };\n\n  renderChildren = ({ item, animation }) => {\n    if (animation) {\n      animation.start();\n    }\n    return item;\n  };\n\n  render() {\n    const { showSeparator, ...props } = this.props;\n    return (\n      <FlatList\n        contentContainerStyle={showSeparator && this.styles.container}\n        keyExtractor={this._keyExtractor}\n        ItemSeparatorComponent={() =>\n          showSeparator ? <View style={this.styles.separator} /> : null\n        }\n        showsVerticalScrollIndicator={false}\n        {...props}\n        data={this._data}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}