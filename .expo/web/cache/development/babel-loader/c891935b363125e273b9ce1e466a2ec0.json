{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/zedex/Downloads/whatsapp-20200816T145951Z-001/whatsapp/components/MenuItem.js\";\nimport React from \"react\";\nimport { Button, Menu, Divider, Provider } from 'react-native-paper';\nimport View from \"react-native-web/dist/exports/View\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useSelector } from \"react-redux\";\nimport { Ionicons, Entypo } from '@expo/vector-icons';\nexport default function MenuItem(props) {\n  var menuList = useSelector(function (state) {\n    return state.menuData;\n  });\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var openMenu = function openMenu() {\n    return setVisible(true);\n  };\n\n  var closeMenu = function closeMenu() {\n    return setVisible(false);\n  };\n\n  return React.createElement(Provider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingTop: 50,\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(Menu, {\n    style: {\n      left: 0,\n      top: 0,\n      zIndex: 2\n    },\n    visible: visible,\n    onDismiss: closeMenu,\n    anchor: React.createElement(Entypo, {\n      name: \"dots-three-vertical\",\n      size: 20,\n      color: \"white\",\n      style: {\n        marginLeft: 20\n      },\n      onPress: openMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, menuList ? menuList.map(function (menu, index) {\n    return React.createElement(Menu.Item, {\n      onPress: function onPress() {\n        closeMenu();\n      },\n      title: menu,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    });\n  }) : null)));\n}\nvar optionsStyles = {};","map":{"version":3,"sources":["/home/zedex/Downloads/whatsapp-20200816T145951Z-001/whatsapp/components/MenuItem.js"],"names":["React","Button","Menu","Divider","Provider","MaterialCommunityIcons","useSelector","Ionicons","Entypo","MenuItem","props","menuList","state","menuData","useState","visible","setVisible","openMenu","closeMenu","paddingTop","flexDirection","justifyContent","left","top","zIndex","marginLeft","map","menu","index","optionsStyles"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAUA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,QAAhC,QAAgD,oBAAhD;;AAEA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,QAAR,EAAiBC,MAAjB,QAA8B,oBAA9B;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,QAAjB;AAAA,GAAD,CAA5B;;AADsC,wBAuBRb,KAAK,CAACc,QAAN,CAAe,KAAf,CAvBQ;AAAA;AAAA,MAuB/BC,OAvB+B;AAAA,MAuBtBC,UAvBsB;;AAyBtC,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,WAAMD,UAAU,CAAC,IAAD,CAAhB;AAAA,GAAjB;;AAEA,MAAME,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMF,UAAU,CAAC,KAAD,CAAhB;AAAA,GAAlB;;AAEA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,UAAU,EAAE,EADP;AAELC,MAAAA,aAAa,EAAE,KAFV;AAGLC,MAAAA,cAAc,EAAE;AAHX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AACA,IAAA,KAAK,EAAE;AACPC,MAAAA,IAAI,EAAE,CADC;AAEPC,MAAAA,GAAG,EAAE,CAFE;AAGPC,MAAAA,MAAM,EAAE;AAHD,KADP;AAME,IAAA,OAAO,EAAET,OANX;AAOE,IAAA,SAAS,EAAEG,SAPb;AAQE,IAAA,MAAM,EACN,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,qBAAb;AAAmC,MAAA,IAAI,EAAE,EAAzC;AAA6C,MAAA,KAAK,EAAC,OAAnD;AAA2D,MAAA,KAAK,EAAE;AAACO,QAAAA,UAAU,EAAC;AAAZ,OAAlE;AAAmF,MAAA,OAAO,EAAER,QAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGN,QAAQ,GACLA,QAAQ,CAACe,GAAT,CAAa,UAACC,IAAD,EAAOC,KAAP;AAAA,WACX,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,OAAO,EAAE,mBAAM;AAACV,QAAAA,SAAS;AAAG,OAAvC;AAAyC,MAAA,KAAK,EAAES,IAAhD;AAAuD,MAAA,GAAG,EAAEC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW;AAAA,GAAb,CADK,GAIL,IAdN,CANF,CADF,CADF;AA2BD;AAED,IAAMC,aAAa,GAAG,EAAtB","sourcesContent":["import React from \"react\";\n// import {\n//   Menu,\n//   MenuOptions,\n//   MenuOption,\n//   MenuTrigger,\n//   MenuProvider,\n// } from \"react-native-popup-menu\";\n\n\nimport { Button, Menu, Divider, Provider } from 'react-native-paper';\nimport {View } from \"react-native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useSelector } from \"react-redux\";\nimport {Ionicons,Entypo} from '@expo/vector-icons'\nexport default function MenuItem(props) {\n  const menuList = useSelector((state) => state.menuData);\n  // console.log(\"my data\", menuList);\n  // return (\n  //   <MenuProvider customStyles={{ padding: 90 }}>\n  //     <Menu>\n  //       <MenuTrigger>\n         \n  //         <Entypo name=\"dots-three-vertical\" size={23} color=\"white\" style={{marginLeft:10}} />\n  //       </MenuTrigger>\n  //       <MenuOptions customStyles={optionsStyles}>\n  //         {menuList\n  //           ? menuList.map((menu, index) => (\n  //               <MenuOption text={menu} key={index} />\n  //             ))\n  //           : null}\n  //       </MenuOptions>\n  //     </Menu>\n  //   </MenuProvider>\n  // );\n\n\n\n  const [visible, setVisible] = React.useState(false);\n\n  const openMenu = () => setVisible(true);\n\n  const closeMenu = () => setVisible(false);\n\n  return (\n    <Provider>\n      <View\n        style={{\n          paddingTop: 50,\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}>\n        <Menu\n        style={{\n        left: 0,\n        top: 0,\n        zIndex: 2\n        }}\n          visible={visible}\n          onDismiss={closeMenu}\n          anchor={\n          <Entypo name=\"dots-three-vertical\" size={20} color=\"white\" style={{marginLeft:20}} onPress={openMenu}/>}>\n          {menuList\n            ? menuList.map((menu, index) => (\n                <Menu.Item onPress={() => {closeMenu()}} title={menu}  key={index}/>\n              ))\n            : null}\n        </Menu>\n      </View>\n    </Provider>\n  );\n}\n\nconst optionsStyles = {\n  // optionsContainer: {\n  //   height: 50,\n  //   width: 50,\n  //   backgroundColor: \"brown\",\n  // },\n  // optionsWrapper: {\n  //   backgroundColor: \"red\",\n  //   height: 70,\n  //   width: 70,\n  // },\n  // optionText: {\n  //   color: \"black\",\n  // },\n};\n"]},"metadata":{},"sourceType":"module"}