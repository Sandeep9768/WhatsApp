{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/zedex/Downloads/whatsapp-20200816T145951Z-001/whatsapp/components/NewImageGrid.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport GridList from 'react-native-grid-list';\nvar items = [{\n  thumbnail: {\n    uri: 'https://lorempixel.com/200/200/animals'\n  }\n}, {\n  thumbnail: {\n    uri: 'https://lorempixel.com/200/200/city'\n  }\n}, {\n  thumbnail: {\n    uri: 'https://lorempixel.com/200/200/nature'\n  }\n}, {\n  thumbnail: {\n    uri: 'https://lorempixel.com/200/200/cats'\n  }\n}];\n\nvar NewImageGrid = function (_PureComponent) {\n  _inherits(NewImageGrid, _PureComponent);\n\n  var _super = _createSuper(NewImageGrid);\n\n  function NewImageGrid() {\n    var _this;\n\n    _classCallCheck(this, NewImageGrid);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return React.createElement(Image, {\n        style: styles.image,\n        source: item.thumbnail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewImageGrid, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, React.createElement(GridList, {\n        showSeparator: true,\n        data: items,\n        numColumns: 3,\n        renderItem: this.renderItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return NewImageGrid;\n}(PureComponent);\n\nexport { NewImageGrid as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["/home/zedex/Downloads/whatsapp-20200816T145951Z-001/whatsapp/components/NewImageGrid.js"],"names":["React","PureComponent","GridList","items","thumbnail","uri","NewImageGrid","renderItem","item","index","styles","image","container","StyleSheet","create","flex","backgroundColor","width","height","borderRadius"],"mappings":";;;;;;;;;;;AAuBA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;;;AAGA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,IAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,GAAG,EAAE;AAAP;AAAb,CADY,EAEZ;AAAED,EAAAA,SAAS,EAAE;AAAEC,IAAAA,GAAG,EAAE;AAAP;AAAb,CAFY,EAGZ;AAAED,EAAAA,SAAS,EAAE;AAAEC,IAAAA,GAAG,EAAE;AAAP;AAAb,CAHY,EAIZ;AAAED,EAAAA,SAAS,EAAE;AAAEC,IAAAA,GAAG,EAAE;AAAP;AAAb,CAJY,CAAd;;IAOqBC,Y;;;;;;;;;;;;;;;;UACnBC,U,GAAa;AAAA,UAAGC,IAAH,QAAGA,IAAH;AAAA,UAASC,KAAT,QAASA,KAAT;AAAA,aACX,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEC,MAAM,CAACC,KAArB;AAA4B,QAAA,MAAM,EAAEH,IAAI,CAACJ,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW;AAAA,K;;;;;;;6BAIJ;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEM,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,aAAa,MADf;AAEE,QAAA,IAAI,EAAET,KAFR;AAGE,QAAA,UAAU,EAAE,CAHd;AAIE,QAAA,UAAU,EAAE,KAAKI,UAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAUD;;;;EAhBuCN,a;;SAArBK,Y;AAmBrB,IAAMI,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/BL,EAAAA,KAAK,EAAE;AACLM,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,MAAM,EAAE,MAFH;AAGLC,IAAAA,YAAY,EAAE;AAHT;AALwB,CAAlB,CAAf","sourcesContent":["// import React from 'react'\n// import { View, Text } from 'react-native'\n// import FbImageLibrary from 'react-fb-image-grid'\n\n// export default function NewImageGrid() {\n//     return (\n//         <View>\n//             <FbImageLibrary images={[\n//                  \"https://bootdey.com/img/Content/avatar/avatar1.png\", \n//                  \"https://bootdey.com/img/Content/avatar/avatar6.png\", \n//                  \"https://bootdey.com/img/Content/avatar/avatar8.png\", \n//                  \"https://bootdey.com/img/Content/avatar/avatar7.png\", \n//                  \"https://bootdey.com/img/Content/avatar/avatar5.png\", \n//                  \"https://bootdey.com/img/Content/avatar/avatar6.png\", \n                 \n//             ]}\n//             countFrom={4}\n//             />\n//         </View>\n//     )\n// }\n\n\nimport React, { PureComponent } from 'react';\nimport { View, StyleSheet, Image } from 'react-native';\n\nimport GridList from 'react-native-grid-list';\n\nconst items = [\n  { thumbnail: { uri: 'https://lorempixel.com/200/200/animals' } },\n  { thumbnail: { uri: 'https://lorempixel.com/200/200/city' } },\n  { thumbnail: { uri: 'https://lorempixel.com/200/200/nature' } },\n  { thumbnail: { uri: 'https://lorempixel.com/200/200/cats' } },\n];\n\nexport default class NewImageGrid extends PureComponent {\n  renderItem = ({ item, index }) => (\n    <Image style={styles.image} source={item.thumbnail} />\n  );\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <GridList\n          showSeparator\n          data={items}\n          numColumns={3}\n          renderItem={this.renderItem}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}