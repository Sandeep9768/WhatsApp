{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/zedex/Downloads/whatsapp-20200816T145951Z-001/whatsapp/components/NewImageGrid.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nvar FbImages = function (_React$Component) {\n  _inherits(FbImages, _React$Component);\n\n  var _super = _createSuper(FbImages);\n\n  function FbImages(props) {\n    var _this;\n\n    _classCallCheck(this, FbImages);\n\n    _this = _super.call(this, props);\n\n    _this.clickEventListener = function () {\n      Alert.alert('Alert', 'image clicked');\n    };\n\n    _this.state = {\n      countFrom: 5,\n      conditionalRender: false,\n      images: [\"https://bootdey.com/img/Content/avatar/avatar1.png\", \"https://bootdey.com/img/Content/avatar/avatar6.png\", \"https://bootdey.com/img/Content/avatar/avatar8.png\", \"https://bootdey.com/img/Content/avatar/avatar7.png\", \"https://bootdey.com/img/Content/avatar/avatar5.png\", \"https://bootdey.com/img/Content/avatar/avatar6.png\", \"https://bootdey.com/img/Content/avatar/avatar4.png\", \"https://bootdey.com/img/Content/avatar/avatar1.png\", \"https://bootdey.com/img/Content/avatar/avatar2.png\", \"https://bootdey.com/img/Content/avatar/avatar3.png\"]\n    };\n    return _this;\n  }\n\n  _createClass(FbImages, [{\n    key: \"renderOne\",\n    value: function renderOne() {\n      var _this2 = this;\n\n      var images = this.state.images;\n      var countFrom = this.state.countFrom;\n      return React.createElement(View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [styles.imageContent, styles.imageContent1],\n        onPress: function onPress() {\n          _this2.clickEventListener();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: images[0]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      })));\n    }\n  }, {\n    key: \"renderTwo\",\n    value: function renderTwo() {\n      var _this3 = this;\n\n      var images = this.state.images;\n      var countFrom = this.state.countFrom;\n      var conditionalRender = [3, 4].includes(images.length) || images.length > +countFrom && [3, 4].includes(+countFrom);\n      return React.createElement(View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [styles.imageContent, styles.imageContent2],\n        onPress: function onPress() {\n          _this3.clickEventListener();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: conditionalRender ? images[2] : images[1]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      })));\n    }\n  }, {\n    key: \"renderThree\",\n    value: function renderThree() {\n      var _this4 = this;\n\n      var images = this.state.images;\n      var countFrom = this.state.countFrom;\n      var overlay = !countFrom || countFrom > 5 || images.length > countFrom && [4, 5].includes(+countFrom) ? this.renderCountOverlay(true) : this.renderOverlay();\n      var conditionalRender = images.length == 4 || images.length > +countFrom && +countFrom == 4;\n      return React.createElement(View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [styles.imageContent, styles.imageContent3],\n        onPress: function onPress() {\n          _this4.clickEventListener();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: conditionalRender ? images[1] : images[2]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: [styles.imageContent, styles.imageContent3],\n        onPress: function onPress() {\n          _this4.clickEventListener();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: conditionalRender ? images[2] : images[3]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      })), overlay);\n    }\n  }, {\n    key: \"renderOverlay\",\n    value: function renderOverlay() {\n      var _this5 = this;\n\n      var images = this.state.images;\n      return React.createElement(TouchableOpacity, {\n        style: [styles.imageContent, styles.imageContent3],\n        onPress: function onPress() {\n          _this5.clickEventListener();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: images[images.length - 1]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }));\n    }\n  }, {\n    key: \"renderCountOverlay\",\n    value: function renderCountOverlay(more) {\n      var _this6 = this;\n\n      var images = this.state.images;\n      var countFrom = this.state.countFrom;\n      var extra = images.length - (countFrom && countFrom > 5 ? 5 : countFrom);\n      var conditionalRender = images.length == 4 || images.length > +countFrom && +countFrom == 4;\n      return React.createElement(TouchableOpacity, {\n        style: [styles.imageContent, styles.imageContent3],\n        onPress: function onPress() {\n          _this6.clickEventListener();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: conditionalRender ? images[3] : images[4]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: styles.overlayContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.count,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }\n      }, \"+\", extra))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          modal = _this$state.modal,\n          index = _this$state.index,\n          countFrom = _this$state.countFrom;\n      var images = this.state.images;\n\n      var imagesToShow = _toConsumableArray(images);\n\n      if (countFrom && images.length > countFrom) {\n        imagesToShow.length = countFrom;\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }\n      }, [1, 3, 4].includes(imagesToShow.length) && this.renderOne(), imagesToShow.length >= 2 && imagesToShow.length != 4 && this.renderTwo(), imagesToShow.length >= 4 && this.renderThree());\n    }\n  }]);\n\n  return FbImages;\n}(React.Component);\n\nexport { FbImages as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginVertical: 20\n  },\n  row: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  imageContent: {\n    borderWidth: 1,\n    borderColor: 'black',\n    height: 120\n  },\n  imageContent1: {\n    width: '100%'\n  },\n  imageContent2: {\n    width: '50%'\n  },\n  imageContent3: {\n    width: '33.33%'\n  },\n  image: {\n    width: '100%',\n    height: '100%'\n  },\n  overlayContent: {\n    flex: 1,\n    position: 'absolute',\n    zIndex: 100,\n    right: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  count: {\n    fontSize: 50,\n    color: \"#ffffff\",\n    fontWeight: 'bold',\n    textShadowColor: 'rgba(0, 0, 139, 1)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 10\n  }\n});","map":{"version":3,"sources":["/home/zedex/Downloads/whatsapp-20200816T145951Z-001/whatsapp/components/NewImageGrid.js"],"names":["React","FbImages","props","clickEventListener","Alert","alert","state","countFrom","conditionalRender","images","styles","row","imageContent","imageContent1","image","uri","includes","length","imageContent2","overlay","renderCountOverlay","renderOverlay","imageContent3","more","extra","overlayContent","count","modal","index","imagesToShow","container","renderOne","renderTwo","renderThree","Component","StyleSheet","create","flex","marginVertical","flexDirection","borderWidth","borderColor","height","width","position","zIndex","right","backgroundColor","justifyContent","alignItems","fontSize","color","fontWeight","textShadowColor","textShadowOffset","textShadowRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { \n  StyleSheet, \n  Text, \n  View, \n  FlatList, \n  Dimensions,\n  TouchableOpacity,\n  Image,\n  Modal,\n  ScrollView,\n  Alert\n} from 'react-native';\n\n/*this is a react native version of this code https://github.com/Expertizo/react-fb-image-grid*/\n\nexport default class FbImages extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      countFrom: 5,\n      conditionalRender: false,\n      images: [\n        \"https://bootdey.com/img/Content/avatar/avatar1.png\", \n        \"https://bootdey.com/img/Content/avatar/avatar6.png\", \n        \"https://bootdey.com/img/Content/avatar/avatar8.png\", \n        \"https://bootdey.com/img/Content/avatar/avatar7.png\", \n        \"https://bootdey.com/img/Content/avatar/avatar5.png\", \n        \"https://bootdey.com/img/Content/avatar/avatar6.png\", \n        \"https://bootdey.com/img/Content/avatar/avatar4.png\", \n        \"https://bootdey.com/img/Content/avatar/avatar1.png\", \n        \"https://bootdey.com/img/Content/avatar/avatar2.png\", \n        \"https://bootdey.com/img/Content/avatar/avatar3.png\",\n      ]\n    };\n  }\n\n  clickEventListener = () => {\n    Alert.alert('Alert', 'image clicked');\n  }\n\n  renderOne() {\n    const {images} = this.state;\n    const {countFrom} = this.state;\n    return(\n      <View style={styles.row}>\n        <TouchableOpacity style={[styles.imageContent, styles.imageContent1]} onPress={() => {this.clickEventListener()}}>\n          <Image style={styles.image} source={{uri: images[0]}}/>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  renderTwo() {\n    const {images} = this.state;\n    const {countFrom} = this.state;\n    const conditionalRender = [3, 4].includes(images.length) || images.length > +countFrom && [3, 4].includes(+countFrom);\n\n    return(\n      <View style={styles.row}>\n        {/* <TouchableOpacity style={[styles.imageContent, styles.imageContent2]} onPress={() => {this.clickEventListener()}}>\n          <Image style={styles.image} source={{uri: (conditionalRender) ? images[1] : images[0]}}/>\n        </TouchableOpacity> */}\n        <TouchableOpacity style={[styles.imageContent, styles.imageContent2]} onPress={() => {this.clickEventListener()}}>\n          <Image style={styles.image} source={{uri: (conditionalRender) ? images[2] : images[1]}}/>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  renderThree() {\n    const {images} = this.state;\n    const {countFrom} = this.state;\n    const overlay = !countFrom || countFrom > 5 || images.length > countFrom && [4, 5].includes(+countFrom) ? this.renderCountOverlay(true) : this.renderOverlay();\n    const conditionalRender = images.length == 4 || images.length > +countFrom && +countFrom == 4;\n\n    return(\n      <View style={styles.row}>\n        <TouchableOpacity style={[styles.imageContent, styles.imageContent3]} onPress={() => {this.clickEventListener()}}>\n          <Image style={styles.image} source={{uri: (conditionalRender) ? images[1] : images[2]}}/>\n        </TouchableOpacity>\n        <TouchableOpacity style={[styles.imageContent, styles.imageContent3]} onPress={() => {this.clickEventListener()}}>\n          <Image style={styles.image} source={{uri: (conditionalRender) ? images[2] : images[3]}}/>\n        </TouchableOpacity>\n        {overlay}\n      </View>\n    );\n  }\n\n  renderOverlay() {\n    const {images} = this.state;\n    return(\n        <TouchableOpacity style={[styles.imageContent, styles.imageContent3]} onPress={() => {this.clickEventListener()}}>\n          <Image style={styles.image} source={{uri: images[images.length - 1]}}/>\n        </TouchableOpacity>\n    );\n  }\n\n  renderCountOverlay(more) {\n    const {images} = this.state;\n    const {countFrom} = this.state;\n    const extra = images.length - (countFrom && countFrom > 5 ? 5 : countFrom);\n    const conditionalRender = images.length == 4 || images.length > +countFrom && +countFrom == 4;\n    return(\n        <TouchableOpacity style={[styles.imageContent, styles.imageContent3]} onPress={() => {this.clickEventListener()}}>\n          <Image style={styles.image} source={{uri: (conditionalRender) ? images[3] : images[4]}}/>\n          <View style={styles.overlayContent}>\n            <View>\n              <Text style={styles.count}>+{extra}</Text>\n            </View>\n          </View>\n        </TouchableOpacity>\n    );\n  }\n\n  render() {\n    const {modal, index, countFrom} = this.state;\n    const {images} = this.state;\n    const imagesToShow = [...images];\n\n    if(countFrom && images.length > countFrom) {\n      imagesToShow.length = countFrom;\n    }\n\n    return (\n      <View style={styles.container}>\n          {[1, 3, 4].includes(imagesToShow.length)  && this.renderOne()}\n          {imagesToShow.length >= 2 && imagesToShow.length != 4 && this.renderTwo()}\n          {imagesToShow.length >= 4 && this.renderThree()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginVertical: 20,\n  },\n  row:{\n    flex:1,\n    flexDirection:'row'\n  },\n  imageContent:{\n    borderWidth:1,\n    borderColor:'black',\n    height:120, \n  },\n  imageContent1:{\n    width:'100%'\n  },\n  imageContent2:{\n    width:'50%',\n  },\n  imageContent3:{\n    width:'33.33%',\n  },\n  image:{\n    width:'100%',\n    height:'100%',\n  },\n  //overlay efect\n  overlayContent: {\n    flex: 1,\n    position: 'absolute',\n    zIndex: 100,\n    right: 0,\n    width:'100%',\n    height:'100%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent:'center',\n    alignItems:'center'\n  },\n  count:{\n    fontSize:50,\n    color: \"#ffffff\",\n    fontWeight:'bold',\n    textShadowColor: 'rgba(0, 0, 139, 1)',\n    textShadowOffset: {width: -1, height: 1},\n    textShadowRadius: 10\n  },\n});  "]},"metadata":{},"sourceType":"module"}